name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'node/package-lock.json'
        
    - name: Change to Node.js directory
      run: cd node
      
    - name: Install dependencies
      run: cd node && npm ci
      
    - name: Lint code
      run: cd node && npm run lint
      
    - name: Check formatting
      run: cd node && npm run format:check
      
    - name: Type check
      run: cd node && npm run typecheck
      
    - name: Run unit tests
      run: cd node && npm run test:unit
      
    - name: Run integration tests
      run: cd node && npm run test:integration
      
    - name: Run CI test suite with coverage
      run: cd node && npm run test:ci -- --coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./node/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        
  real-api-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'node/package-lock.json'
        
    - name: Install dependencies
      run: cd node && npm ci
      
    - name: Run real API tests
      run: cd node && npm run test:real-api
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        NODE_ENV: test
        LOG_LEVEL: warn
        
  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'node/package-lock.json'
        
    - name: Install dependencies
      run: cd node && npm ci
      
    - name: Build project
      run: cd node && npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          node/dist/
          node/build-info.json
          node/DEPLOYMENT.md
        retention-days: 30
        
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'node/package-lock.json'
        
    - name: Install dependencies
      run: cd node && npm ci
      
    - name: Run security audit
      run: cd node && npm audit
      
    - name: Check for vulnerabilities
      run: cd node && npm run security-audit